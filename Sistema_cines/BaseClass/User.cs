//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BaseClass
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Text.RegularExpressions;

    public partial class User : INotifyPropertyChanged, IDataErrorInfo
    {
        public bool Remember { get; set; }

        private int id;
        public int Id
        {
            get { return id; }
            set
            {
                id = value;
                OnPropertyChanged("Id");
            }
        }

        private int rolId;
        public int RolId
        {
            get { return rolId; }
            set
            {
                rolId = value;
                OnPropertyChanged("RolId");
            }
        }


        private string username;
        public string Username
        {
            get { return username; }
            set
            {
                username = value;
                OnPropertyChanged("Username");
            }
        }

        private string password;
        public string Password
        {
            get { return password; }
            set
            {
                password = value;
                OnPropertyChanged("Password");
            }
        }

        private string fullname;
        public string Fullname
        {
            get { return fullname; }
            set
            {
                fullname = value;
                OnPropertyChanged("Fullname");
            }
        }

        private Rol rol;

        public event PropertyChangedEventHandler PropertyChanged;

        public virtual Rol Rol
        {
            get { return rol; }
            set
            {
                rol = value;
                OnPropertyChanged("Rol");
            }
        }

       

        public User()
        {
            Password = password;
            Fullname = fullname;
        }


        private void OnPropertyChanged(string propertyName)
        {
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }


        //implementacion interfaz IDataErrorInfo
        

        public string this[string columnName]
        {
            get
            {
                string msgError = null;
                switch (columnName)
                {
                    case "Username":
                        msgError = validateUsername();
                        break;

                    case "Password":
                        msgError = validatePassword();
                        break;
                    case "Fullname":
                        msgError = validateFullname();
                        break;

                    case "Rol":
                        msgError = validateRol();
                        break;
                }
                return msgError;
            }

        }

        public string Error => throw new NotImplementedException();

        private string validateUsername()
        {

            if (String.IsNullOrEmpty(Username))
            {
                return "Usuario es requerido";
            }

            return null;
        }

        private string validatePassword()
        {

            if (String.IsNullOrEmpty(Username))
            {
                return "Contraseña es requerido";
            }

            return null;
        }

        private string validateFullname()
        {

            if (String.IsNullOrEmpty(Fullname))
            {
                return "Nombre completo es requerido";
            }

            return null;
        }

        private string validateRol()
        {

            if (String.IsNullOrEmpty(Username))
            {
                return "Rol es requerido";
            }

            return null;
        }

        //----
        private bool validate(string value, string pattern)
        {
            Regex regex = new Regex(pattern);
            if (regex.IsMatch(value))
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        public bool IsValidated()
        {
            if (this.validateUsername() == null && this.validatePassword() == null)
                return true;
            return false;
        }
    }
}

